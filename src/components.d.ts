/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@ionic/core';
import 'ionicons';
import {
  Color,
} from '@ionic/core';


export namespace Components {

  interface ScplButton {
    'color'?: Color;
    'type': string;
  }
  interface ScplButtonAttributes extends StencilHTMLAttributes {
    'color'?: Color;
    'type'?: string;
  }

  interface ScplCard {
    'color': Color;
    'type': string;
  }
  interface ScplCardAttributes extends StencilHTMLAttributes {
    'color'?: Color;
    'type'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'ScplButton': Components.ScplButton;
    'ScplCard': Components.ScplCard;
  }

  interface StencilIntrinsicElements {
    'scpl-button': Components.ScplButtonAttributes;
    'scpl-card': Components.ScplCardAttributes;
  }


  interface HTMLScplButtonElement extends Components.ScplButton, HTMLStencilElement {}
  var HTMLScplButtonElement: {
    prototype: HTMLScplButtonElement;
    new (): HTMLScplButtonElement;
  };

  interface HTMLScplCardElement extends Components.ScplCard, HTMLStencilElement {}
  var HTMLScplCardElement: {
    prototype: HTMLScplCardElement;
    new (): HTMLScplCardElement;
  };

  interface HTMLElementTagNameMap {
    'scpl-button': HTMLScplButtonElement
    'scpl-card': HTMLScplCardElement
  }

  interface ElementTagNameMap {
    'scpl-button': HTMLScplButtonElement;
    'scpl-card': HTMLScplCardElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
